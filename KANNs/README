# 1. get gpu based libtorch with the following:
  wget https://download.pytorch.org/libtorch/cu118/libtorch-cxx11-abi-shared-with-deps-2.0.0%2Bcu118.zip
  unzip libtorch-cxx11-abi-shared-with-deps-2.0.0+cu118.zip
# 2. modify the cmake file according to the library locations
# 3. load following modules 
1) stack/2024-06
2) gcc/12.2.0
3) cuda/12.1.1
3) rust/1.75.0-bsyu2z5 (for hyperfine)
6) ncc1/2.18.3-1
8) python_cuda/3.9.18
9) cmake/3.27.7

# install hyperfine
cargo install hyperfine --version 1.18.0

# 4. create python environment with requirements
  python3.9 -m venv myenv && source myenv/bin/activate && pip install -r requirements.txt

# 5. compile the C++ code
  cmake -DCMAKE_PREFIX_PATH=`python3 -c 'import torch;print(torch.utils.cmake_prefix_path)'` ..   
  make
# 6. run both codes with hyperfine
hyperfine --warmup 5 --runs 20 './KANNs_cpp' 'python3 LagrangeKANN.py'

#Python code needs to be located in the build file

# for gpu analysis we can only modify the width: 5,10,20,50,100. with order 1 and precision 1e-3, 100 maximum epochs.

